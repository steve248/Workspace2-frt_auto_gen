#///////////////////////////////////////////////////////////////////
# This file define QSFP and QSFP_PLUS variables
#///////////////////////////////////////////////////////////////////
# Description:
#
# Applicable
#             isFor_CFP          = false
#             isFor_GPON_OLT_SFF = false
#             isFor_GPON_OLT_SFP = false
#             isFor_GPON_ONU     = false
#             isFor_CXP          = false
#             isFor_QSFP         = true
#             isFor_QSFP_PLUS    = true
#             isFor_SFP          = false
#             isFor_SFP_DWDM     = false
#             isFor_SFP_PLUS     = false
#             isFor_XAUI         = false
#             isFor_XFP          = false
#
# Date    : $Date: 2011-10-06 15:24:10 -0700 (Thu, 06 Oct 2011) $
# Revision: $Rev: 722 $
# Author  : $Author: steve.lin $
# ID      : $Id: qsfp.def 722 2011-10-06 22:24:10Z steve.lin $
#
#///////////////////////////////////////////////////////////////////

##################################################
#
# NOTE:
# Do not delete: This script was translated from a .def file
#   UTC time:   2014-09-15 07:26:39
#   Local time: 2014-09-15 00:26:39
#   If the file time is different, this script may have been edited manually
#
##################################################


# NOTE:
#  Do not manually editing this file.
#  This file was generated by an Python script "auto_gen_FTR_def_file_to_FRT_Class_file.py",
#  which uses "qsfp.def" as input file
#


### define variables
if True:

#///////////////////////////////////////////////////////////////////
#

# Table 17 -- Lower Memory Map
    addr_pwd_change                       = 119
    addr_pwd                              = 123
    addr_page                             = 127

# Table 18 -- status indicator
    addr_status                 = 2
    mask_status_int_l           = 0x02		# bit 1
    bit_status_int_l            = 1
    mask_status_data_not_ready  = 0x01		# bit 0
    bit_status_data_not_ready   = 0

    status_int_l_deasserted_msa    = mask_status_int_l
    status_int_l_asserted_msa      = mask_status_int_l ^ mask_status_int_l

#   Cisco EDCS-641344 definition
    status_int_l_deasserted_cisco  = mask_status_int_l ^ mask_status_int_l
    status_int_l_asserted_cisco    = mask_status_int_l

    status_int_l_deasserted        = status_int_l_deasserted_msa
    status_int_l_asserted          = status_int_l_asserted_msa

# Table 19 -- channel status interrupt
    addr_L_first_latched_flag  = 3
    addr_L_last_latched_flag   = 21

    addr_L_tx_los_4             = 3
    mask_L_tx_los_4             = 0x80		# bit 7
    addr_L_tx_los_3             = 3
    mask_L_tx_los_3             = 0x40		# bit 6
    addr_L_tx_los_2             = 3
    mask_L_tx_los_2             = 0x20		# bit 5
    addr_L_tx_los_1             = 3
    mask_L_tx_los_1             = 0x10		# bit 4

    addr_L_rx_los_4             = 3
    mask_L_rx_los_4             = 0x08		# bit 3
    addr_L_rx_los_3             = 3
    mask_L_rx_los_3             = 0x04		# bit 2
    addr_L_rx_los_2             = 3
    mask_L_rx_los_2             = 0x02		# bit 1
    addr_L_rx_los_1             = 3
    mask_L_rx_los_1             = 0x01		# bit 0

    addr_L_tx_fault_4           = 4
    mask_L_tx_fault_4           = 0x08		# bit 3
    addr_L_tx_fault_3           = 4
    mask_L_tx_fault_3           = 0x04		# bit 2
    addr_L_tx_fault_2           = 4
    mask_L_tx_fault_2           = 0x02		# bit 1
    addr_L_tx_fault_1           = 4
    mask_L_tx_fault_1           = 0x01		# bit 0

# Table 20 -- module monitor interrupt
    addr_L_temp_high_alarm     = 6
    mask_L_temp_high_alarm     = 0x80		# bit 7
    addr_L_temp_low_alarm      = 6
    mask_L_temp_low_alarm      = 0x40		# bit 6
    addr_L_temp_high_warning   = 6
    mask_L_temp_high_warning   = 0x20		# bit 5
    addr_L_temp_low_warning    = 6
    mask_L_temp_low_warning    = 0x10		# bit 4
    addr_L_init_complete_flag  = 6
    mask_L_init_complete_flag  = 0x01		# bit 0

    addr_L_vcc_high_alarm      = 7
    mask_L_vcc_high_alarm      = 0x80		# bit 7
    addr_L_vcc_low_alarm       = 7
    mask_L_vcc_low_alarm       = 0x40		# bit 6
    addr_L_vcc_high_warning    = 7
    mask_L_vcc_high_warning    = 0x20		# bit 5
    addr_L_vcc_low_warning     = 7
    mask_L_vcc_low_warning     = 0x10		# bit 4

# Table 21 -- channel monitor interrupt
    addr_L_rx_pwr_high_alarm_1     = 9
    mask_L_rx_pwr_high_alarm_1     = 0x80		# bit 7
    addr_L_rx_pwr_low_alarm_1      = 9
    mask_L_rx_pwr_low_alarm_1      = 0x40		# bit 6
    addr_L_rx_pwr_high_warning_1   = 9
    mask_L_rx_pwr_high_warning_1   = 0x20		# bit 5
    addr_L_rx_pwr_low_warning_1    = 9
    mask_L_rx_pwr_low_warning_1    = 0x10		# bit 4

    addr_L_rx_pwr_high_alarm_2     = 9
    mask_L_rx_pwr_high_alarm_2     = 0x08		# bit 3
    addr_L_rx_pwr_low_alarm_2      = 9
    mask_L_rx_pwr_low_alarm_2      = 0x04		# bit 2
    addr_L_rx_pwr_high_warning_2   = 9
    mask_L_rx_pwr_high_warning_2   = 0x02		# bit 1
    addr_L_rx_pwr_low_warning_2    = 9
    mask_L_rx_pwr_low_warning_2    = 0x01		# bit 0

    addr_L_rx_pwr_high_alarm_3     = 10
    mask_L_rx_pwr_high_alarm_3     = 0x80		# bit 7
    addr_L_rx_pwr_low_alarm_3      = 10
    mask_L_rx_pwr_low_alarm_3      = 0x40		# bit 6
    addr_L_rx_pwr_high_warning_3   = 10
    mask_L_rx_pwr_high_warning_3   = 0x20		# bit 5
    addr_L_rx_pwr_low_warning_3    = 10
    mask_L_rx_pwr_low_warning_3    = 0x10		# bit 4

    addr_L_rx_pwr_high_alarm_4     = 10
    mask_L_rx_pwr_high_alarm_4     = 0x08		# bit 3
    addr_L_rx_pwr_low_alarm_4      = 10
    mask_L_rx_pwr_low_alarm_4      = 0x04		# bit 2
    addr_L_rx_pwr_high_warning_4   = 10
    mask_L_rx_pwr_high_warning_4   = 0x02		# bit 1
    addr_L_rx_pwr_low_warning_4    = 10
    mask_L_rx_pwr_low_warning_4    = 0x01		# bit 0

# tx bias
    addr_L_tx_bias_high_alarm_1     = 11
    mask_L_tx_bias_high_alarm_1     = 0x80		# bit 7
    addr_L_tx_bias_low_alarm_1      = 11
    mask_L_tx_bias_low_alarm_1      = 0x40		# bit 6
    addr_L_tx_bias_high_warning_1   = 11
    mask_L_tx_bias_high_warning_1   = 0x20		# bit 5
    addr_L_tx_bias_low_warning_1    = 11
    mask_L_tx_bias_low_warning_1    = 0x10		# bit 4

    addr_L_tx_bias_high_alarm_2     = 11
    mask_L_tx_bias_high_alarm_2     = 0x08		# bit 3
    addr_L_tx_bias_low_alarm_2      = 11
    mask_L_tx_bias_low_alarm_2      = 0x04		# bit 2
    addr_L_tx_bias_high_warning_2   = 11
    mask_L_tx_bias_high_warning_2   = 0x02		# bit 1
    addr_L_tx_bias_low_warning_2    = 11
    mask_L_tx_bias_low_warning_2    = 0x01		# bit 0

    addr_L_tx_bias_high_alarm_3     = 12
    mask_L_tx_bias_high_alarm_3     = 0x80		# bit 7
    addr_L_tx_bias_low_alarm_3      = 12
    mask_L_tx_bias_low_alarm_3      = 0x40		# bit 6
    addr_L_tx_bias_high_warning_3   = 12
    mask_L_tx_bias_high_warning_3   = 0x20		# bit 5
    addr_L_tx_bias_low_warning_3    = 12
    mask_L_tx_bias_low_warning_3    = 0x10		# bit 4

    addr_L_tx_bias_high_alarm_4     = 12
    mask_L_tx_bias_high_alarm_4     = 0x08		# bit 3
    addr_L_tx_bias_low_alarm_4      = 12
    mask_L_tx_bias_low_alarm_4      = 0x04		# bit 2
    addr_L_tx_bias_high_warning_4   = 12
    mask_L_tx_bias_high_warning_4   = 0x02		# bit 1
    addr_L_tx_bias_low_warning_4    = 12
    mask_L_tx_bias_low_warning_4    = 0x01		# bit 0

#   Byte 13: Cisco EDCS-641344 definition
    addr_L_tx_pwr_high_alarm_1     = 13
    mask_L_tx_pwr_high_alarm_1     = 0x80		# bit 7
    addr_L_tx_pwr_low_alarm_1      = 13
    mask_L_tx_pwr_low_alarm_1      = 0x40		# bit 6
    addr_L_tx_pwr_high_warning_1   = 13
    mask_L_tx_pwr_high_warning_1   = 0x20		# bit 5
    addr_L_tx_pwr_low_warning_1    = 13
    mask_L_tx_pwr_low_warning_1    = 0x10		# bit 4

    addr_L_tx_pwr_high_alarm_2     = 13
    mask_L_tx_pwr_high_alarm_2     = 0x08		# bit 3
    addr_L_tx_pwr_low_alarm_2      = 13
    mask_L_tx_pwr_low_alarm_2      = 0x04		# bit 2
    addr_L_tx_pwr_high_warning_2   = 13
    mask_L_tx_pwr_high_warning_2   = 0x02		# bit 1
    addr_L_tx_pwr_low_warning_2    = 13
    mask_L_tx_pwr_low_warning_2    = 0x01		# bit 0

#   Byte 14: Cisco EDCS-641344 definition
    addr_L_tx_pwr_high_alarm_3     = 14
    mask_L_tx_pwr_high_alarm_3     = 0x80		# bit 7
    addr_L_tx_pwr_low_alarm_3      = 14
    mask_L_tx_pwr_low_alarm_3      = 0x40		# bit 6
    addr_L_tx_pwr_high_warning_3   = 14
    mask_L_tx_pwr_high_warning_3   = 0x20		# bit 5
    addr_L_tx_pwr_low_warning_3    = 14
    mask_L_tx_pwr_low_warning_3    = 0x10		# bit 4

    addr_L_tx_pwr_high_alarm_4     = 14
    mask_L_tx_pwr_high_alarm_4     = 0x08		# bit 3
    addr_L_tx_pwr_low_alarm_4      = 14
    mask_L_tx_pwr_low_alarm_4      = 0x04		# bit 2
    addr_L_tx_pwr_high_warning_4   = 14
    mask_L_tx_pwr_high_warning_4   = 0x02		# bit 1
    addr_L_tx_pwr_low_warning_4    = 14
    mask_L_tx_pwr_low_warning_4    = 0x01		# bit 0

# Table 22 -- module monitoring value
    addr_temp                      = 22
    addr_vcc                       = 26

# Table 23 -- channel monitoring value
    addr_rx_pwr_1                   = 34
    addr_rx_pwr_2                   = 36
    addr_rx_pwr_3                   = 38
    addr_rx_pwr_4                   = 40

    addr_tx_bias_1                  = 42
    addr_tx_bias_2                  = 44
    addr_tx_bias_3                  = 46
    addr_tx_bias_4                  = 48

#   Cisco EDCS-641344 definition
    addr_tx_pwr_1                   = 50
    addr_tx_pwr_2                   = 52
    addr_tx_pwr_3                   = 54
    addr_tx_pwr_4                   = 56

# Table 24 -- control bytes
    addr_cntl_86               = 86
    addr_C_86                  = 86
    addr_tx_dis            = 86
    addr_tx_dis_4           = 86
    addr_tx_dis_3           = 86
    addr_tx_dis_2           = 86
    addr_tx_dis_1           = 86
    mask_tx_dis_4           = 0x01 << 3		# bit 3
    mask_tx_dis_3           = 0x01 << 2		# bit 2
    mask_tx_dis_2           = 0x01 << 1		# bit 1
    mask_tx_dis_1           = 0x01 << 0		# bit 0

    addr_cntl_87               = 87
    addr_rx_rate_sel        = 87
    addr_rx_rate_sel_4       = 87
    addr_rx_rate_sel_3       = 87
    addr_rx_rate_sel_2       = 87
    addr_rx_rate_sel_1       = 87
    mask_rx_rate_sel_4       = 0xC0		# bit 7, 6
    mask_rx_rate_sel_3       = 0x30		# bit 5, 4
    mask_rx_rate_sel_2       = 0x0C		# bit 3, 2
    mask_rx_rate_sel_1       = 0x03		# bit 1, 0
    mask_rx_rate_sel_6_6G_4  = 0x80		# bit 7, 6
    mask_rx_rate_sel_6_6G_3  = 0x20		# bit 5, 4
    mask_rx_rate_sel_6_6G_2  = 0x08		# bit 3, 2
    mask_rx_rate_sel_6_6G_1  = 0x02		# bit 1, 0

    addr_cntl_88               = 88
    addr_tx_rate_sel        = 88
    addr_tx_rate_sel_4       = 88
    addr_tx_rate_sel_3       = 88
    addr_tx_rate_sel_2       = 88
    addr_tx_rate_sel_1       = 88
    mask_tx_rate_sel_4       = 0xC0		# bit 7, 6
    mask_tx_rate_sel_3       = 0x30		# bit 5, 4
    mask_tx_rate_sel_2       = 0x0C		# bit 3, 2
    mask_tx_rate_sel_1       = 0x03		# bit 1, 0
    mask_tx_rate_sel_6_6G_4  = 0x80		# bit 7, 6
    mask_tx_rate_sel_6_6G_3  = 0x20		# bit 5, 4
    mask_tx_rate_sel_6_6G_2  = 0x08		# bit 3, 2
    mask_tx_rate_sel_6_6G_1  = 0x02		# bit 1, 0

    addr_rx_app_sel_4  = 89
    addr_rx_app_sel_3  = 90
    addr_rx_app_sel_2  = 91
    addr_rx_app_sel_1  = 92
    mask_rx_app_sel_4  = 0xC0
    mask_rx_app_sel_3  = 0xC0
    mask_rx_app_sel_2  = 0xC0
    mask_rx_app_sel_1  = 0xC0

    addr_cntl_93               = 93
    addr_pwr_override        = 93
    mask_pwr_set             = 0x01 << 1		# bit 1
    mask_pwr_override        = 0x01 << 0		# bit 0

    addr_tx_app_sel_4  = 94
    addr_tx_app_sel_3  = 95
    addr_tx_app_sel_2  = 96
    addr_tx_app_sel_1  = 97
    mask_tx_app_sel_4  = 0xC0
    mask_tx_app_sel_3  = 0xC0
    mask_tx_app_sel_2  = 0xC0
    mask_tx_app_sel_1  = 0xC0

    addr_cntl_98               = 98
    addr_cntl_99               = 99

# Table 25 -- IntL Masking Bits for Module and Channel Status interrupts
    addr_M_5_byte_mask_100    = 100
    addr_M_100                = 100
    addr_M_7_byte_mask_100    = 100
    set_7_byte_mask           = 0xFFFFFFFFFFFFFF

    addr_M_tx_los_4            = 100
    mask_M_tx_los_4            = 0x80		# bit 7
    addr_M_tx_los_3            = 100
    mask_M_tx_los_3            = 0x40		# bit 6
    addr_M_tx_los_2            = 100
    mask_M_tx_los_2            = 0x20		# bit 5
    addr_M_tx_los_1            = 100
    mask_M_tx_los_1            = 0x10		# bit 4
    addr_M_rx_los_4            = 100
    mask_M_rx_los_4            = 0x08		# bit 3
    addr_M_rx_los_3            = 100
    mask_M_rx_los_3            = 0x04		# bit 2
    addr_M_rx_los_2            = 100
    mask_M_rx_los_2            = 0x02		# bit 1
    addr_M_rx_los_1            = 100
    mask_M_rx_los_1            = 0x01		# bit 0

    addr_M_tx_fault_4          = 101
    mask_M_tx_fault_4          = 0x08		# bit 3
    addr_M_tx_fault_3          = 101
    mask_M_tx_fault_3          = 0x04		# bit 2
    addr_M_tx_fault_2          = 101
    mask_M_tx_fault_2          = 0x02		# bit 1
    addr_M_tx_fault_1          = 101
    mask_M_tx_fault_1          = 0x01		# bit 0

    addr_M_temp_high_alarm    = 103
    mask_M_temp_high_alarm     = 0x80		# bit 7
    addr_M_temp_low_alarm      = 103
    mask_M_temp_low_alarm      = 0x40		# bit 6
    addr_M_temp_high_warning   = 103
    mask_M_temp_high_warning   = 0x20		# bit 5
    addr_M_temp_low_warning    = 103
    mask_M_temp_low_warning    = 0x10		# bit 4
    addr_M_init_complete_flag  = 103
    mask_M_init_complete_flag  = 0x01

    addr_M_vcc_high_alarm     = 104
    mask_M_vcc_high_alarm     = 0x80		# bit 7
    addr_M_vcc_low_alarm      = 104
    mask_M_vcc_low_alarm      = 0x40		# bit 6
    addr_M_vcc_high_warning   = 104
    mask_M_vcc_high_warning   = 0x20		# bit 5
    addr_M_vcc_low_warning    = 104
    mask_M_vcc_low_warning    = 0x10		# bit 4

# Table 29 -- serial ID page 0
    addr_identifier_p0       = 128		# page 00h
    addr_vendor_name_p0      = 148
    addr_vendor_pn_p0        = 168
    addr_vendor_rev_p0       = 184
    addr_vendor_sn_p0        = 196
    addr_vendor_datecode_p0  = 212

# Table 46 -- module and channel thresholds
    addr_T_temp_high_alarm_p3       = 128		# page 03h
    addr_T_temp_low_alarm_p3        = 130
    addr_T_temp_high_warning_p3     = 132
    addr_T_temp_low_warning_p3      = 134

    addr_T_vcc_high_alarm_p3        = 144		# page 03h
    addr_T_vcc_low_alarm_p3         = 146
    addr_T_vcc_high_warning_p3      = 148
    addr_T_vcc_low_warning_p3       = 150

    addr_T_rx_pwr_high_alarm_p3     = 176		# page 03h
    addr_T_rx_pwr_low_alarm_p3      = 178
    addr_T_rx_pwr_high_warning_p3   = 180
    addr_T_rx_pwr_low_warning_p3    = 182

    addr_T_tx_bias_high_alarm_p3    = 184		# page 03h
    addr_T_tx_bias_low_alarm_p3     = 186
    addr_T_tx_bias_high_warning_p3  = 188
    addr_T_tx_bias_low_warning_p3   = 190

# Cisco
    addr_T_tx_pwr_high_alarm_p3     = 192		# page 03h
    addr_T_tx_pwr_low_alarm_p3      = 194
    addr_T_tx_pwr_high_warning_p3   = 196
    addr_T_tx_pwr_low_warning_p3    = 198

# Table 47 -- optional channel controls
    addr_C_226_p3                   = 226
    addr_rx_output_preemphasis_1_p3  = 226		# Finisar
    mask_rx_output_preemphasis_1      = 0xF0
    addr_rx_output_preemphasis_2_p3  = 226		# Finisar
    mask_rx_output_preemphasis_2      = 0x0F
    addr_rx_output_preemphasis_3_p3  = 227		# Finisar
    mask_rx_output_preemphasis_3      = 0xF0
    addr_rx_output_preemphasis_4_p3  = 227		# Finisar
    mask_rx_output_preemphasis_4      = 0x0F

    addr_rx_output_amplitude_1_p3    = 238
    mask_rx_output_amplitude_1        = 0xF0
    addr_rx_output_amplitude_2_p3    = 238
    mask_rx_output_amplitude_2        = 0x0F
    addr_rx_output_amplitude_3_p3    = 239
    mask_rx_output_amplitude_3        = 0xF0
    addr_rx_output_amplitude_4_p3    = 239
    mask_rx_output_amplitude_4        = 0x0F

    addr_rx_sq_dis_4_p3        = 240		# page 03h
    addr_rx_sq_dis_4_p3        = 240		# page 03h
    mask_rx_sq_dis_4            = 0x80		# bit 7
    addr_rx_sq_dis_3_p3        = 240
    mask_rx_sq_dis_3            = 0x40		# bit 6
    addr_rx_sq_dis_2_p3        = 240
    mask_rx_sq_dis_2            = 0x20		# bit 5
    addr_rx_sq_dis_1_p3        = 240
    mask_rx_sq_dis_1            = 0x10		# bit 4
    addr_tx_sq_dis_4_p3        = 240
    mask_tx_sq_dis_4            = 0x08		# bit 3
    addr_tx_sq_dis_3_p3        = 240
    mask_tx_sq_dis_3            = 0x04		# bit 2
    addr_tx_sq_dis_2_p3        = 240
    mask_tx_sq_dis_2            = 0x02		# bit 1
    addr_tx_sq_dis_1_p3        = 240
    mask_tx_sq_dis_1            = 0x01		# bit 0
    addr_rx_output_dis_4_p3    = 241
    mask_rx_output_dis_4        = 0x80		# bit 7
    addr_rx_output_dis_3_p3    = 241
    mask_rx_output_dis_3        = 0x40		# bit 6
    addr_rx_output_dis_2_p3    = 241
    mask_rx_output_dis_2        = 0x20		# bit 5
    addr_rx_output_dis_1_p3    = 241
    mask_rx_output_dis_1        = 0x10		# bit 4

# Table 48 -- channel monitor mask
    addr_M_12_byte_mask_242_p3     = 242		# page 03h, 12 byte, 242-253
    addr_M_242_p3            = 242		# page 03h, 12 byte, 242-253

    addr_M_rx_pwr_high_alarm_1_p3     = 242
    mask_M_rx_pwr_high_alarm_1         = 0x80		# bit 7
    addr_M_rx_pwr_low_alarm_1_p3      = 242
    mask_M_rx_pwr_low_alarm_1          = 0x40		# bit 6
    addr_M_rx_pwr_high_warning_1_p3   = 242
    mask_M_rx_pwr_high_warning_1       = 0x20		# bit 5
    addr_M_rx_pwr_low_warning_1_p3    = 242
    mask_M_rx_pwr_low_warning_1        = 0x10		# bit 4

    addr_M_rx_pwr_high_alarm_2_p3     = 242
    mask_M_rx_pwr_high_alarm_2         = 0x08		# bit 3
    addr_M_rx_pwr_low_alarm_2_p3      = 242
    mask_M_rx_pwr_low_alarm_2          = 0x04		# bit 2
    addr_M_rx_pwr_high_warning_2_p3   = 242
    mask_M_rx_pwr_high_warning_2       = 0x02		# bit 1
    addr_M_rx_pwr_low_warning_2_p3    = 242
    mask_M_rx_pwr_low_warning_2        = 0x01		# bit 0

    addr_M_rx_pwr_high_alarm_3_p3     = 243
    mask_M_rx_pwr_high_alarm_3         = 0x80		# bit 7
    addr_M_rx_pwr_low_alarm_3_p3      = 243
    mask_M_rx_pwr_low_alarm_3          = 0x40		# bit 6
    addr_M_rx_pwr_high_warning_3_p3   = 243
    mask_M_rx_pwr_high_warning_3       = 0x20		# bit 5
    addr_M_rx_pwr_low_warning_3_p3    = 243
    mask_M_rx_pwr_low_warning_3        = 0x10		# bit 4

    addr_M_rx_pwr_high_alarm_4_p3     = 243
    mask_M_rx_pwr_high_alarm_4         = 0x08		# bit 3
    addr_M_rx_pwr_low_alarm_4_p3      = 243
    mask_M_rx_pwr_low_alarm_4          = 0x04		# bit 2
    addr_M_rx_pwr_high_warning_4_p3   = 243
    mask_M_rx_pwr_high_warning_4       = 0x02		# bit 1
    addr_M_rx_pwr_low_warning_4_p3    = 243
    mask_M_rx_pwr_low_warning_4        = 0x01		# bit 0

    addr_M_tx_bias_high_alarm_1_p3    = 244
    mask_M_tx_bias_high_alarm_1        = 0x80		# bit 7
    addr_M_tx_bias_low_alarm_1_p3     = 244
    mask_M_tx_bias_low_alarm_1         = 0x40		# bit 6
    addr_M_tx_bias_high_warning_1_p3  = 244
    mask_M_tx_bias_high_warning_1      = 0x20		# bit 5
    addr_M_tx_bias_low_warning_1_p3   = 244
    mask_M_tx_bias_low_warning_1       = 0x10		# bit 4

    addr_M_tx_bias_high_alarm_2_p3    = 244
    mask_M_tx_bias_high_alarm_2        = 0x08		# bit 3
    addr_M_tx_bias_low_alarm_2_p3     = 244
    mask_M_tx_bias_low_alarm_2         = 0x04		# bit 2
    addr_M_tx_bias_high_warning_2_p3  = 244
    mask_M_tx_bias_high_warning_2      = 0x02		# bit 1
    addr_M_tx_bias_low_warning_2_p3   = 244
    mask_M_tx_bias_low_warning_2       = 0x01		# bit 0

    addr_M_tx_bias_high_alarm_3_p3    = 245
    mask_M_tx_bias_high_alarm_3        = 0x80		# bit 7
    addr_M_tx_bias_low_alarm_3_p3     = 245
    mask_M_tx_bias_low_alarm_3         = 0x40		# bit 6
    addr_M_tx_bias_high_warning_3_p3  = 245
    mask_M_tx_bias_high_warning_3      = 0x20		# bit 5
    addr_M_tx_bias_low_warning_3_p3   = 245
    mask_M_tx_bias_low_warning_3       = 0x10		# bit 4

    addr_M_tx_bias_high_alarm_4_p3    = 245
    mask_M_tx_bias_high_alarm_4        = 0x08		# bit 3
    addr_M_tx_bias_low_alarm_4_p3     = 245
    mask_M_tx_bias_low_alarm_4         = 0x04		# bit 2
    addr_M_tx_bias_high_warning_4_p3  = 245
    mask_M_tx_bias_high_warning_4      = 0x02		# bit 1
    addr_M_tx_bias_low_warning_4_p3   = 245
    mask_M_tx_bias_low_warning_4       = 0x01		# bit 0

#   Cisco EDCS-641344 definition
    addr_M_tx_pwr_high_alarm_1_p3     = 246
    mask_M_tx_pwr_high_alarm_1         = 0x80		# bit 7
    addr_M_tx_pwr_low_alarm_1_p3      = 246
    mask_M_tx_pwr_low_alarm_1          = 0x40		# bit 6
    addr_M_tx_pwr_high_warning_1_p3   = 246
    mask_M_tx_pwr_high_warning_1       = 0x20		# bit 5
    addr_M_tx_pwr_low_warning_1_p3    = 246
    mask_M_tx_pwr_low_warning_1        = 0x10		# bit 4

    addr_M_tx_pwr_high_alarm_2_p3     = 246
    mask_M_tx_pwr_high_alarm_2         = 0x08		# bit 3
    addr_M_tx_pwr_low_alarm_2_p3      = 246
    mask_M_tx_pwr_low_alarm_2          = 0x04		# bit 2
    addr_M_tx_pwr_high_warning_2_p3   = 246
    mask_M_tx_pwr_high_warning_2       = 0x02		# bit 1
    addr_M_tx_pwr_low_warning_2_p3    = 246
    mask_M_tx_pwr_low_warning_2        = 0x01		# bit 0

    addr_M_tx_pwr_high_alarm_3_p3     = 247
    mask_M_tx_pwr_high_alarm_3         = 0x80		# bit 7
    addr_M_tx_pwr_low_alarm_3_p3      = 247
    mask_M_tx_pwr_low_alarm_3          = 0x40		# bit 6
    addr_M_tx_pwr_high_warning_3_p3   = 247
    mask_M_tx_pwr_high_warning_3       = 0x20		# bit 5
    addr_M_tx_pwr_low_warning_3_p3    = 247
    mask_M_tx_pwr_low_warning_3        = 0x10		# bit 4

    addr_M_tx_pwr_high_alarm_4_p3     = 247
    mask_M_tx_pwr_high_alarm_4         = 0x08		# bit 3
    addr_M_tx_pwr_low_alarm_4_p3      = 247
    mask_M_tx_pwr_low_alarm_4          = 0x04		# bit 2
    addr_M_tx_pwr_high_warning_4_p3   = 247
    mask_M_tx_pwr_high_warning_4       = 0x02		# bit 1
    addr_M_tx_pwr_low_warning_4_p3    = 247
    mask_M_tx_pwr_low_warning_4        = 0x01		# bit 0

    mask_M_bit_deasserted         = 0xFF ^ mask_M_vcc_high_alarm
    mask_M_bit_deasserted       = 0xFF ^ mask_M_vcc_high_warning
    mask_M_bit_deasserted          = 0xFF ^ mask_M_vcc_low_alarm
    mask_M_bit_deasserted        = 0xFF ^ mask_M_vcc_low_warning

# bad thresholds value
    bad_temp_high     = 0x9889		# very low value (negative)
    bad_temp_low      = 0x7667		# very high value
    bad_tx_bias_high  = 0x0110		# very low value
    bad_tx_bias_low   = 0xFEEF		# very high value
    bad_rx_pwr_high   = 0x0002		# very low value
    bad_rx_pwr_low    = 0xFEEF		# very high value
    bad_tx_pwr_high   = bad_rx_pwr_high
    bad_tx_pwr_low    = bad_rx_pwr_low
    bad_vcc_high      = 0x0019		# very low value (to be verified)
    bad_vcc_low       = 0x9889		# very high value (to be verified)

# Table 11 -- QSFP Management Interface timing
    t_host_sel        = frttime("2ms")		# Host_select_setup and Host_select_hold

# Table 12 -- QSFP Memory Specification
    t_clock_hold  = frttime("500us")
    t_wr           = frttime("40ms")

# Table 15 -- I/O timing for Soft Control and Status Functions
    t_init        = frttime("2000ms")
    t_reset_init  = frttime("2us")
    t_serial      = frttime("2000ms")
    t_data        = frttime("2000ms")
    t_reset       = frttime("2000ms")
    t_lpmode_on   = frttime("100us")
    t_on_int_l    = frttime("200ms")
    t_off_int_l   = frttime("500us")
    t_on_los      = frttime("100ms")
    t_on_tx_fault  = frttime("200ms")
    t_on_flag     = frttime("200ms")
    t_mask_on     = frttime("100ms")
    t_mask_off    = frttime("100ms")
    t_ratesel     = frttime("100ms")
    t_pdown_on    = frttime("100ms")
    t_pdown_off   = frttime("300ms")

# Table 16 -- I/O timing for Squenich and Disable
    t_on_rx_sq     = frttime("80us")
    t_off_rx_sq    = frttime("80us")
    t_on_tx_sq     = frttime("400ms")
    t_off_tx_sq    = frttime("400ms")
    t_on_tx_dis    = frttime("100ms")
    t_off_tx_dis   = frttime("400ms")
    t_on_rx_dis    = frttime("100ms")
    t_off_rx_dis   = frttime("100ms")
    t_on_sq_dis    = frttime("100ms")
    t_off_sq_dis   = frttime("100ms")

#--------------- non MSA: password
    pwd_bad             = 0x01020304		# In MSA's module invalid password range (MSB bit = 0)
    pwd_host_msa        = 0x00001011		# In MSA's module host password range (MSB bit = 0), a MSA defined value
    pwd_host_finisar    = 0x00000000		# In MSA's module host password range (MSB bit = 0), but a Finisar defined value, aka level1
    pwd_level2_finisar  = 0x9BB03DFA		# In MSA's module manufacturer password range (MSB bit = 1), a Finisar defined value
    pwd_level3_finisar  = 0xC66AA466A1		# FCC3: In MSA's module manufacturer password range (MSB bit = 1), a Finisar defined value
    pwd_level3_finisar  = 0xD1C4D3C5A0		# FCC4: In MSA's module manufacturer password range (MSB bit = 1), a Finisar defined value

    pwd_xfp_eval_board  = 0xDF5E75CD		# Password to change Finisar XFP eval board Dallas chip DS1849 setting

    t_serial_max_finisar  = frttime("90ms")

# Alias
    addr_L_tx_pwr_high_alarm_1    = addr_L_tx_pwr_high_alarm_1
    addr_L_tx_pwr_high_alarm_3    = addr_L_tx_pwr_high_alarm_3

    t_pdown_on                     = t_pdown_on
    t_pdown_off                    = t_pdown_off
    t_mask_on                      = t_mask_on
    t_mask_off                     = t_mask_off
    t_reset_init                   = t_reset_init
    t_reset                        = t_reset
    t_init                         = t_init
    t_lpmode_on                    = t_lpmode_on
    t_400ms                     = frttime("400ms")
    t_400ms                    = frttime("400ms")

    addr_M_7_byte_mask_242_p3     = 242
    addr_M_4_byte_mask_100         = 100

#--------------- non MSA: misc constant

    set_4_byte_mask     = 0xFFFFFFFF
    set_5_byte_mask     = 0xFFFFFFFFFF
    set_7_byte_mask     = 0xFFFFFFFFFFFFFF
    set_12_byte_mask    = 0xFFFFFFFFFFFFFFFFFFFFFFFF
    mask_128_byte       = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

    mask_lo         = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00

    mask_hi_p0     = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    mask_hi_p1     = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    mask_hi_p2     = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    mask_hi_p3     = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
# NOTE:
#  Do not manually editing this file.
#  This file was generated by an Python script "auto_gen_FTR_def_file_to_FRT_Class_file.py",
#  which uses "qsfp.def" as input file
#

